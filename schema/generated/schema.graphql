### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  """Create project API key"""
  createSetup(projectId: Int!): WorkspaceProjectSetup!

  """Create a workspace for current user"""
  createWorkspace(name: String!): WorkspaceUser!
}

interface Node {
  """Resource ID"""
  id: Int!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  me: User
  project(id: Int!): WorkspaceProject
  userWorkspace(workspaceId: Int!): WorkspaceUser
  userWorkspaces(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): WorkspaceUserConnection
}

enum Role {
  ADMIN
  USER
}

type User implements Node {
  email: String
  id: Int!
  image: String
  name: String
  workspaces(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): WorkspaceUserConnection
}

type Workspace implements Node {
  id: Int!
  image: String
  name: String
  projects(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): WorkspaceProjectConnection
}

type WorkspaceProject implements Node {
  activeSetup: WorkspaceProjectSetup
  id: Int!
  name: String!
  stats(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): WorkspaceProjectStatsConnection
  workspace: Workspace
}

type WorkspaceProjectConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WorkspaceProjectEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type WorkspaceProjectEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: WorkspaceProject
}

type WorkspaceProjectSetup implements Node {
  id: Int!
  key: String!
  lastUsedAt: DateTime
}

type WorkspaceProjectStats implements Node {
  id: Int!
}

type WorkspaceProjectStatsConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WorkspaceProjectStatsEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type WorkspaceProjectStatsEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: WorkspaceProjectStats
}

type WorkspaceUser implements Node {
  id: Int!
  role: WorkspaceUserRole!
  user: User!
  workspace: Workspace!
}

type WorkspaceUserConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [WorkspaceUserEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
  totalCount: Int
}

type WorkspaceUserEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: WorkspaceUser
}

enum WorkspaceUserRole {
  ADMIN
  USER
}
